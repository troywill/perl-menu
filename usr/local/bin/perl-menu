#!/usr/bin/env perl
use strict;
use warnings;
use Term::ANSIColor;
use Term::ReadKey;

# ReadMode 1;    # Change to cooked mode.
my ( $wchar, $hchar, $wpixels, $hpixels ) = GetTerminalSize();

my @menu = (
    [ "1", "Google Chromium", \&start_chromium ],
    [ "2", "Show wireless networks", \&display_wireless_networks ],
    [ "3", "Connect to open network",       \&connect_to_open_network ],
    [ "4", "Weight",                        \&connect_to_open_network ],
    [ "5", "Chinese",                       \&connect_to_open_network ],
    [ "t", "urn off computer",              \&troy_new_reading ],
    [ "r", "reboot computer",               \&shutdown ]
);

# http://search.cpan.org/dist/TermReadKey/ReadKey.pm [2010-01-03]
# http://www.perlmonks.org/?node_id=798213 [2010-01-03]

ReadMode 4;    # Turn off controls keys
my $header      = '+' . '-' x ( $wchar - 2 ) . '+' . "\n|\n";
my $left_margin = "|\t";
my $footer      = "|\n" . '+' . '-' x ( $wchar - 2 ) . '+' . "\n";
my $clear       = `clear`;
&display_menu(@menu);
ReadMode 1;    # Change to cooked mode.
# while (1) {
#     my $key = ReadKey(-1);
#     if ( defined($key) ) {
#         # display menu if m is pressed
#         &display_menu(@menu) if ( $key eq 'm' );
#         &process_key( $key, @menu );
#     }
#     select( undef, undef, undef, 0.50 );
# }

sub process_key {
    ReadMode 1;    # Change to cooked mode.
    my ( $char_received, @menu ) = @_;
    if ( ( $char_received eq 'Q' ) || ( $char_received eq 'q' ) ) {
        ReadMode 1;    # Change to cooked mode.
        exit;
    }
    for my $aref (@menu) {
        my $menu_key      = $$aref[0];
        my $menu_text     = $$aref[1];
        my $sub_reference = $$aref[2];

        if ( $menu_key eq $char_received ) {
            &$sub_reference;
        }
    }
    ReadMode 4;    # Turn off control keys
}

sub connect_to_open_network {
    system("sudo perl-net-connect-open");
}

sub display_wireless_networks {
    system("sudo perl-net-scan-wireless");
}

sub start_chromium {
    &write_xinitrc;
    system("startx");

    # Write lightweight manager configuration
    sub write_xinitrc {
        my $HOME = $ENV{'HOME'};
        open my $xinitrc, '>',
          "$HOME/.xinitrc" || die "Unable to open $HOME/.xinitrc for output";
        print $xinitrc <<HERE;
	exec startfluxbox
HERE
    }
}

sub display_menu {
    print $clear;
    print color 'bold white';
    print $header;
    my @menu = @_;
    for my $aref (@menu) {
        my $menu_key  = $$aref[0];
        my $menu_text = $$aref[1];
        print "${left_margin}[";
        print color 'bold blue';
        print $menu_key;
	print color 'bold white';
        print "] ";
	print $menu_text;
#	print color 'reset';
	print "\n";
    }
    print $footer;
}

sub shutdown {
    `sudo /sbin/shutdown -h now`;
}

sub run_fluxbox {
    unless ( -e "/tmp/.X0-lock" ) {
        open( XINITRC, ">/home/troy/.xinitrc" );
        print XINITRC<<END;
exec startfluxbox
END
        `startx`;
    }
}

sub prompt_continue {
    $| = 1;
    while (1) {
        select( undef, undef, undef, 0.25 );
        my $key = ReadKey(-1);
        if ( defined($key) ) {
            return;
        }
    }
}
